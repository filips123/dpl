#!/bin/bash

set -e

put() {
  echo -e "\n$@"
}

run() {
  put "\$ $@"
  $@
}

put "Setting up working dir ..."

mkdir -p tmp/dpl_test
cat .travis/providers/hephy/config.ru | sed "s/%{ID}/$ID/" > tmp/dpl_test/config.ru
cp .travis/providers/hephy/{Gemfile,Gemfile.lock} tmp/dpl_test
cd tmp/dpl_test
git init .
git add .
git commit -m dpl-test

put "Installing kubectl ..."
curl -sLO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
run which kubectl

put "Installing kind ..."
curl -sLo kind https://github.com/kubernetes-sigs/kind/releases/download/0.0.1/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
run which kind

put "Installing deis ..."
curl -sL https://raw.githubusercontent.com/teamhephy/workflow-cli/master/install-v2.sh | bash -s v2.20.0 && sudo mv deis /usr/local/bin/
run which deis

put "Installing helm ..."
curl -sL https://git.io/get_helm.sh | bash
run which helm

image="travis-ci/dpl-test"
cluster="kind-1"
container="${cluster}-control-plane"
file="/tmp/image.tar.gz"

put "Creating kind cluster ..."
run kind create cluster
export KUBECONFIG="$(kind get kubeconfig-path)"
kubectl cluster-info

put "Installing Hephy workflow ..."
run kubectl create sa tiller-deploy -n kube-system
run kubectl create clusterrolebinding helm --clusterrole=cluster-admin --serviceaccount=kube-system:tiller-deploy
run helm init --service-account=tiller-deploy --wait
run helm repo add hephy https://charts.teamhephy.com/
run helm install hephy/workflow --namespace deis --name hephy \
  --set global.use_rbac=true,router.service_type=NodePort,router.host_port.enabled=true
run kubectl -n deis wait --for=condition=available --timeout=600s deployment/deis-controller deployment/deis-router

id=$(docker ps | grep kind-1-control-plane | awk '{ print $1 }')
ip=$(docker inspect $id | grep '"IPAddress"' | head -n 1 | sed 's/[^0-9\.]//g')
controller="deis.$ip.xip.io"

until run deis register $controller --username=admin --password=admin --email=dpl-test@travis-ci.com; do
  run kubectl -n deis get pods
  sleep 5
done
run deis register $controller --username=dpl-user --password=dpl-pass --email=dpl-test@travis-ci.com
run deis create dpl-test
run deis config:set PORT=3000 -a dpl-test

# kubectl -n deis get pods
# kubectl -n deis describe service deis-workflow
# kubectl delete namespace deis
# helm delete --purge hephy
